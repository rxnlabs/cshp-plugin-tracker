!function(){"use strict";new class{generateUUID(){return[1e7].toString()+"-1e3-4e3-8e3-1e11".replace(/[018]/g,(e=>(+e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>+e/4).toString(16)))}createNewTokenListener(){const e=document.querySelector("#cshp-generate-key"),t=document.querySelector("#cshp-token"),n=document.querySelector("#cshp-delete-key");e&&t&&e.addEventListener("click",(()=>{(""===t.value.trim()||confirm("Generate a new token? WARNING: Old token will be deleted"))&&(t.value=this.generateUUID())})),n&&n.addEventListener("click",(()=>{confirm("Delete token? WARNING: You will not be able to download the plugins if the token is deleted and a new one is not generated")&&t&&(t.value="")}))}copyToClipboard(e){return navigator&&navigator.clipboard&&navigator.clipboard.writeText?navigator.clipboard.writeText(e):Promise.reject(new Error("The Clipboard API is not available."))}copyTokenToClipboardListener(){document.querySelectorAll(".copy-button").forEach((e=>{e.addEventListener("click",(e=>{var t;const n=e.target.dataset.copy;if(n){const e=`#${n}, input[name="${n}"], select[name="${n}"], textarea[name="${n}"], .${n}`,a=document.querySelector(e);if(a){const e=a instanceof HTMLInputElement||a instanceof HTMLTextAreaElement?a.value:(null===(t=a.textContent)||void 0===t?void 0:t.trim())||"";e&&this.copyToClipboard(e).catch((e=>console.error(e)))}}}))}))}initializeDataTable(e){new simpleDatatables.DataTable(e,{searchable:!0,fixedHeight:!0})}constructor(){document.addEventListener("readystatechange",(()=>{var e;"interactive"===document.readyState&&(this.createNewTokenListener(),this.copyTokenToClipboardListener(),"log"===(null===(e=window.cshp_pt)||void 0===e?void 0:e.tab)&&this.initializeDataTable("#cshpt-log"))}))}}}();
//# sourceMappingURL=admin.min.js.map
